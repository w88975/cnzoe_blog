帮我写一个文字解析函数, 要求是, 输入一段文本, 解析出哪些属于tag,哪些属于文本,哪些属于换行, 该文本的内容可能是如下
示例1: '\n\n hi 你好世界 #tag1 #tag2 ' => br,text,text,tag,text 
示例2: '#ccc #ddd #eee' => tag,tag, text

tag的逻辑在于 以 #开头, 后面紧跟一个或多个字母, 数字, 中文 并且首尾跟其他文本以空格隔开,如果尾是回车也算
行首的tag, 只需要判断尾是否有空格或者换行

示例: '#ccc' => tag 
示例: '\n\n#ccc ' => br,tag
示例: '\n\n#ccc' => br,text

对于换行的逻辑来说, \n \n\n都算一个换行, 区别在于他们在文本中间还是行首行尾, 以下是换行的处理逻辑
输入: '\n\n'
预期: [{type: 'br', text: '\n\n'}]
解释: '行首换行符, 需要两个\n才算一个换行'

输入: '\n\n\n\n'
预期: [{type: 'br', text: '\n\n'},{type: 'br', text: '\n\n'}]
解释: '行首换行符, 需要两个\n才算一个换行, 所以连续的\n\n算两个换行'

输入: '\n\n\n\n\n'
预期: [{type: 'br', text: '\n\n'},{type: 'br', text: '\n\n'}]
解释: '行首换行符, 需要两个\n才算一个换行, 计算方式为两两一组, 多一个\n不算换行'

输入: '\n\n\n1'
预期: [{type: 'br', text: '\n\n'},{type: 'text', text: '1'}]
解释: '行首换行符, 需要两个\n才算一个换行, 计算方式为两两一组, 多一个\n不算换行'

输入: '\n\n\n1\n\n'
预期: [{type: 'br', text: '\n\n'},{type: 'text', text: '1'},{type: 'br', text: '\n\n'}]
解释: '行尾换行符的逻辑跟行首一样'

输入: '\n\n111\n2'
预期: [{type: 'br', text: '\n\n'},{type: 'text', text: '111'},{type: 'br', text: '\n\n'},{type: 'text', text: '2'}]
解释: '文本中间的换行符, 只需要一个\n'

输入: '\n\n111\n2\n'
预期: [{type: 'br', text: '\n\n'},{type: 'text', text: '111'},{type: 'br', text: '\n\n'},{type: 'text', text: '2'}]
解释: '行尾换行符的逻辑跟行首一样, 单独一个不算'

请用js实现这个函数
